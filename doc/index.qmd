---
engine: knitr
embed-resources: true
---

# gdocker

`gdocker` is a command-line tool written in Go for managing and building Docker images, especially for bioinformatics tools.
It provides commands to show image dependencies, build images with dependency resolution, run containers with preset options, and manage image directories.
The tool supports features like visualizing dependency graphs, exporting build instructions, and preparing templates for new images.

## Install

Before installing `gdocker`, ensure the following are installed on your system:

- git
- Go
- make
- docker

To install `gdocker`, run the following command in terminal:

```{bash}
#| eval: false
go install github.com/t-arae/gdocker@latest
```

## main commmand 

To see the available commands and global options, run:

```{bash}
gdocker --help
```

This will display a list of all supported subcommands and their descriptions.
For help with a specific subcommand, use:

```{bash}
#| eval: false
gdocker help <subcommand>
```

Replace <subcommand> with the name of the command you want help with (e.g., build, showdeps, run).

## TODOs

- global
    - [x] set log level
    - [x] include docker version
- `showdeps`
    - [x] show dependency graph as mermeid format
    - [ ] run with selected images
- `build`
    - [x] detect dependency
    - [x] solve dependencies
    - [x] visualize dependencies
    - [x] export build instructions
    - [ ] enable build flags
- `run` `wdrun`
    - [x] preset uid/gid/working directory
    - [x] make available flags to control this command
    - [x] help message
- `images`
    - [x] show/check image directory
    - [ ] show images from directory
- `dev`
    - [x] prepare template
    - [ ] choose output (stdout or file)
    - [ ] check directory
    - [ ] make directory tree
    - [x] prepare a config file for `gdocker`
    - [ ] set image directory

# なぜgdockerを作ったのか？

Dockerは軽量なLinuxの仮想環境を提供するのに良いツールだが、LinuxでDockerを使って作業をしてファイルを作成すると、作成したファイルをホスト側では管理者権限でしか開けないという問題が出た。Macを使用しているとこの問題は起きない。
この問題は`gosu`を使ってコンテナ内のユーザーを切り替えることで回避できるが、そのための設定を`docker run`実行時に毎回指定するのは面倒だった。

また、NGSデータ解析用のツールごとにDocker imageを分けたいが、各image間での依存関係をビルドするときに考慮するのが大変（自分はできても他の人に伝えるのが大変）になるので、自動で依存関係の解決をしたかった。

以上のことから、`gdocker`は以下を簡単にするために開発した。

- 統一的なDocker imageをビルドするためのディレクトリ・ファイル構成を決めて、それを簡単に作成できるようにする。
- イメージ間の依存関係を自動で計算し、順番にビルドを行う。
- コンテナで作業する際に、自動で最低限必要なオプションを設定する。
